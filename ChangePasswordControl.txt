using System;
using System.Drawing;
using System.Windows.Forms;
using HRMSinternshipProject2025.ControllerHelper;
using HRMSinternshipProject2025.Model;
namespace HRMSinternshipProject2025.View.Controls
{
    public partial class ChangePasswordControl : UserControl
    {
        private readonly int _employeeId;
        private readonly ChangePasswordRepository _changePasswordRepository;
        //new for changing in employee-hr-head integration
        private readonly Employee loggedInEmployee;

        public ChangePasswordControl()
        {
            InitializeComponent();
        }
        public ChangePasswordControl(int currentEmployeeId)
        {
            InitializeComponent();
            _employeeId = currentEmployeeId;
            _changePasswordRepository = new ChangePasswordRepository();
        }
        private void btnSave_Click(object sender, EventArgs e)
        {
            string currentPassword = txtOldPassword.Text.Trim();
            string newPassword = txtNewPassword.Text.Trim();
            string confirmPassword = txtConfirmPassword.Text.Trim();
            if (string.IsNullOrEmpty(currentPassword) || string.IsNullOrEmpty(newPassword) || string.IsNullOrEmpty(confirmPassword))
            {
                lblOldPassword.Visible = true;
                lblOldPassword.Text = "Please fill in current password.";
                lblOldPassword.ForeColor = Color.Red;
                lblNewPassword.Visible = true;
                lblNewPassword.Text = "Please fill in new password";
                lblNewPassword.ForeColor = Color.Red;
                lblConfirmPassword.Visible = true;
                lblConfirmPassword.Text = "Please fill in confirm password";
                lblConfirmPassword.ForeColor = Color.Red;
                return;
            }
            if (!_changePasswordRepository.ValidateOldPassword(_employeeId, currentPassword))
            {
                lblOldPassword.Visible = true;
                lblOldPassword.Text = "Current password is incorrect.";
                lblOldPassword.ForeColor = Color.Red;
                return;
            }
            if (newPassword != confirmPassword)
            {
                lblConfirmPassword.Visible = true;
                lblConfirmPassword.Text = "New password and confirm password do not match.";
                lblConfirmPassword.ForeColor = Color.Red;
                return;
            }
            if (_changePasswordRepository.UpdatePassword(_employeeId, newPassword))
            {
                MessageBox.Show("Password changed successfully.", "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            else
            {
                MessageBox.Show("Failed to change password. Please try again.", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            
        //new for changing in employee-hr-head integration
            LoginForm login = new LoginForm();
            login.Show();
        }
        private void txtOldPassword_TextChanged(object sender, EventArgs e)
        {
            string passwordError = ChangepasswordValidation.ValidateCurrentPassword(txtOldPassword.Text.Trim());
            if (passwordError != null)
            {
                lblOldPassword.Visible = true;
                lblOldPassword.Text = passwordError;
                lblOldPassword.ForeColor = Color.Red;
            }
            else
            {
                lblOldPassword.Visible = false;
            }
        }
        private void txtNewPassword_TextChanged(object sender, EventArgs e)
        {
            string passwordError = ChangepasswordValidation.ValidateNewPassword(txtNewPassword.Text.Trim());
            if (passwordError != null)
            {
                lblNewPassword.Visible = true;
                lblNewPassword.Text = passwordError;
                lblNewPassword.ForeColor = Color.Red;
            }
            else
            {
                lblNewPassword.Visible = false;
            }
        }
        private void txtConfirmPassword_TextChanged(object sender, EventArgs e)
        {
            string passwordError = ChangepasswordValidation.ValidateConfirmPassword(txtNewPassword.Text.Trim(), txtConfirmPassword.Text.Trim());
            if (passwordError != null)
            {
                lblConfirmPassword.Visible = false;
                lblConfirmPassword.Text = passwordError;
                lblConfirmPassword.ForeColor = Color.Red;
            }
        }
    }
}